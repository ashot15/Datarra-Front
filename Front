```jsx
import React, { useState, useRef } from "react";

export default function App() {
  const [activeTab, setActiveTab] = useState("upload");
  const [file, setFile] = useState(null);
  const [isProcessing, setIsProcessing] = useState(false);
  const [generatedImages, setGeneratedImages] = useState([]);
  const [aiProgress, setAiProgress] = useState(0);
  const fileInputRef = useRef(null);

  const handleUpload = () => {
    fileInputRef.current.click();
  };

  const handleFileChange = (e) => {
    const selectedFile = e.target.files[0];
    if (selectedFile && selectedFile.type.startsWith("audio/")) {
      setFile(selectedFile);
    }
  };

  const processAudioAndGenerate = () => {
    if (!file) return;

    setIsProcessing(true);
    setAiProgress(0);

    // Имитация прогресса обработки
    const interval = setInterval(() => {
      setAiProgress((prev) => {
        if (prev >= 100) {
          clearInterval(interval);
          setTimeout(() => {
            const fakeImageUrls = [
              `https://picsum.photos/id/${Math.floor(Math.random() * 100)}/800/600?random=1`,
              `https://picsum.photos/id/${Math.floor(Math.random() * 100)}/800/600?random=2`,
              `https://picsum.photos/id/${Math.floor(Math.random() * 100)}/800/600?random=3`,
            ];
            setGeneratedImages(fakeImageUrls);
            setIsProcessing(false);
            setActiveTab("results");
            return 100;
          }, 500);
        }
        return prev + Math.floor(Math.random() * 7) + 3;
      });
    }, 100);
  };

  // SVG иконки для навигации и разделов
  const UploadIcon = () => (
    <svg className="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
      <path strokeLinecap="round" strokeLinejoin="round" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
    </svg>
  );

  const ResultsIcon = () => (
    <svg className="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
      <path strokeLinecap="round" strokeLinejoin="round" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z" />
    </svg>
  );

  const AboutIcon = () => (
    <svg className="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
      <circle cx="12" cy="12" r="10" />
      <path strokeLinecap="round" strokeLinejoin="round" d="M12 16v-4M12 8h.01" />
    </svg>
  );

  const MusicWaveIcon = () => (
    <svg className="w-10 h-10 mx-auto" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
      <path strokeLinecap="round" strokeLinejoin="round" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3" />
    </svg>
  );

  const CheckmarkIcon = () => (
    <svg className="w-10 h-10 mx-auto text-green-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
      <path strokeLinecap="round" strokeLinejoin="round" d="M5 13l4 4L19 7" />
    </svg>
  );

  const PlayIcon = () => (
    <svg className="w-6 h-6" viewBox="0 0 24 24" fill="currentColor">
      <path d="M8 5v14l11-7z" />
    </svg>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-black to-purple-950 text-white font-sans overflow-x-hidden">
      {/* Header / Navigation */}
      <header className="bg-black/80 backdrop-blur-md border-b border-gray-800 sticky top-0 z-30 shadow-lg shadow-purple-900/20">
        <div className="container mx-auto px-4 py-5 flex justify-between items-center">
          <h1 className="text-3xl md:text-4xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 tracking-tight">
            Datarra
          </h1>
          <nav className="hidden md:flex space-x-4">
            <button
              onClick={() => setActiveTab("upload")}
              className={`flex items-center gap-2 py-2 px-4 rounded-lg transition-all ${
                activeTab === "upload"
                  ? "bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold shadow-lg shadow-purple-500/30"
                  : "hover:bg-gray-800 hover:text-purple-400"
              }`}
            >
              <UploadIcon /> Upload
            </button>
            <button
              onClick={() => setActiveTab("results")}
              disabled={!file}
              className={`flex items-center gap-2 py-2 px-4 rounded-lg transition-all ${
                activeTab === "results"
                  ? "bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold shadow-lg shadow-purple-500/30"
                  : "hover:bg-gray-800 hover:text-purple-400"
              } ${!file ? "opacity-50 cursor-not-allowed" : ""}`}
            >
              <ResultsIcon /> Results
            </button>
            <button
              onClick={() => setActiveTab("about")}
              className={`flex items-center gap-2 py-2 px-4 rounded-lg transition-all ${
                activeTab === "about"
                  ? "bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold shadow-lg shadow-purple-500/30"
                  : "hover:bg-gray-800 hover:text-purple-400"
              }`}
            >
              <AboutIcon /> About
            </button>
          </nav>
        </div>
      </header>

      {/* Main Content */}
      <main className="container mx-auto px-4 py-12">
        {activeTab === "upload" && (
          <section className="max-w-3xl mx-auto text-center">
            <h2 className="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 leading-tight bg-clip-text text-transparent bg-gradient-to-r from-pink-400 via-purple-500 to-indigo-600 animate-fadeIn">
              Transform Sound into Visual Stories
            </h2>
            <p className="text-lg md:text-xl text-gray-300 mb-10 max-w-2xl mx-auto opacity-90">
              Let AI interpret your music into vivid scenes that tell the story behind every note.
            </p>

            <div
              onClick={handleUpload}
              className={`border-2 border-dashed rounded-3xl p-12 text-center cursor-pointer transition-all duration-300 ease-in-out transform hover:scale-[1.01] hover:shadow-xl hover:shadow-purple-500/20 ${
                file
                  ? "border-green-500 bg-gray-800/50"
                  : "border-purple-600 hover:border-pink-500"
              }`}
            >
              <input
                type="file"
                ref={fileInputRef}
                onChange={handleFileChange}
                accept="audio/*"
                hidden
              />
              {!file ? (
                <>
                  <div className="mx-auto h-20 w-20 flex items-center justify-center rounded-full bg-gradient-to-tr from-pink-500 to-purple-500 animate-pulse">
                    <MusicWaveIcon />
                  </div>
                  <h3 className="mt-4 text-xl font-medium text-white">
                    Drag & Drop or Click to Upload Music File
                  </h3>
                  <p className="mt-2 text-sm text-gray-400">
                    MP3, WAV, FLAC supported
                  </p>
                </>
              ) : (
                <div className="flex flex-col items-center">
                  <CheckmarkIcon />
                  <h3 className="mt-4 text-xl font-medium text-white truncate max-w-xs">
                    Uploaded: {file.name}
                  </h3>
                  <button
                    onClick={processAudioAndGenerate}
                    disabled={isProcessing}
                    className="mt-8 px-8 py-4 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-xl shadow-lg hover:shadow-xl hover:from-purple-700 hover:to-pink-700 transform hover:scale-105 transition-all focus:outline-none focus:ring-2 focus:ring-purple-500"
                  >
                    {isProcessing ? "Generating..." : "Start Visual Journey"}
                  </button>
                </div>
              )}
            </div>
          </section>
        )}

        {activeTab === "results" && (
          <section className="max-w-6xl mx-auto">
            <h2 className="text-4xl font-bold text-center mb-12 bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-500">
              Your Musical Story Unfolds...
            </h2>

            {generatedImages.length > 0 ? (
              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-10">
                {generatedImages.map((url, idx) => (
                  <div
                    key={idx}
                    className="rounded-2xl overflow-hidden shadow-2xl border border-gray-700 hover:border-purple-500 transition-all duration-300 group"
                  >
                    <div className="relative overflow-hidden">
                      <img
                        src={url}
                        alt={`AI-generated scene ${idx + 1}`}
                        className="w-full h-80 object-cover group-hover:scale-105 transition-transform duration-700"
                      />
                      <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
                    </div>
                    <div className="p-6 bg-gradient-to-b from-gray-900 to-gray-800">
                      <h4 className="text-xl font-semibold">Scene {idx + 1}</h4>
                      <p className="text-gray-400 text-sm mt-1">
                        Generated from the emotional spectrum of your music.
                      </p>
                      <button className="mt-3 flex items-center justify-center gap-2 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-4 py-2 rounded-lg transition-all">
                        <PlayIcon /> Preview
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-20">
                <p className="text-gray-400 text-xl">
                  No images generated yet. Go back and upload a track!
                </p>
              </div>
            )}

            {isProcessing && (
              <div className="mt-10 max-w-xl mx-auto">
                <h3 className="text-center text-xl font-semibold mb-4">AI Processing Track</h3>
                <div className="w-full bg-gray-700 rounded-full h-4 overflow-hidden">
                  <div
                    className="bg-gradient-to-r from-purple-500 to-pink-500 h-4 transition-all duration-300"
                    style={{ width: `${aiProgress}%` }}
                  ></div>
                </div>
                <p className="text-center mt-2 text-sm text-gray-400">{aiProgress}% Complete</p>
              </div>
            )}
          </section>
        )}

        {activeTab === "about" && (
          <section className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl font-bold mb-6 bg-clip-text text-transparent bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500">
              What is Datarra?
            </h2>
            <p className="text-lg text-gray-300 mb-6">
              Datarra is an AI-powered platform that transforms music into visual storytelling experiences.
              Using advanced neural networks, it interprets audio patterns, emotions, and rhythms to generate vivid imagery inspired by your favorite tracks.
            </p>
            <p className="text-lg text-gray-300 mb-10">
              Whether you're a musician, artist, or simply passionate about music,
              Datarra offers a unique way to explore sound through art — one frame at a time.
            </p>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mt-10">
              <div className="bg-gray-800/70 p-8 rounded-2xl shadow-lg hover:shadow-purple-500/20 transition-shadow border border-gray-700 group">
                <div className="inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-br from-purple-600 to-pink-600 text-white text-2xl font-bold mb-4 transform transition-transform group-hover:scale-110">
                  🤖
                </div>
                <h3 className="text-xl font-semibold mb-2 text-purple-400">Powered by AI</h3>
                <p className="text-gray-400">
                  Our deep learning models analyze every beat, note, and tone to craft meaningful visuals aligned with the music’s essence.
                </p>
              </div>
              <div className="bg-gray-800/70 p-8 rounded-2xl shadow-lg hover:shadow-purple-500/20 transition-shadow border border-gray-700 group">
                <div className="inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-br from-purple-600 to-pink-600 text-white text-2xl font-bold mb-4 transform transition-transform group-hover:scale-110">
                  🎨
                </div>
                <h3 className="text-xl font-semibold mb-2 text-purple-400">Creative Freedom</h3>
                <p className="text-gray-400">
                  Discover new ways to visualize your creativity and express musical emotions in a form that speaks louder than words.
                </p>
              </div>
            </div>
          </section>
        )}
      </main>

      {/* Features Section */}
      <section className="container mx-auto px-4 py-20">
        <h2 className="text-3xl font-bold text-center mb-16">How It Works</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-10">
          <div className="group relative overflow-hidden rounded-2xl bg-gray-800/60 backdrop-blur-sm border border-gray-700 shadow-lg hover:shadow-xl hover:shadow-purple-600/20 transition-all">
            <div className="absolute inset-0 bg-gradient-to-tr from-purple-700/10 to-pink-600/10 opacity-0 group-hover:opacity-100 transition-opacity"></div>
            <div className="relative z-10 p-8 text-center">
              <div className="inline-flex items-center justify-center w-20 h-20 rounded-full bg-gradient-to-br from-purple-600 to-pink-600 text-white text-3xl font-bold mb-6 group-hover:scale-110 transition-transform">
                🎵
              </div>
              <h3 className="text-2xl font-semibold mb-3">Upload Music</h3>
              <p className="text-gray-400">
                Choose any audio file you'd like to turn into a story.
              </p>
            </div>
          </div>
          <div className="group relative overflow-hidden rounded-2xl bg-gray-800/60 backdrop-blur-sm border border-gray-700 shadow-lg hover:shadow-xl hover:shadow-purple-600/20 transition-all">
            <div className="absolute inset-0 bg-gradient-to-tr from-purple-700/10 to-pink-600/10 opacity-0 group-hover:opacity-100 transition-opacity"></div>
            <div className="relative z-10 p-8 text-center">
              <div className="inline-flex items-center justify-center w-20 h-20 rounded-full bg-gradient-to-br from-purple-600 to-pink-600 text-white text-3xl font-bold mb-6 group-hover:scale-110 transition-transform">
                🔍
              </div>
              <h3 className="text-2xl font-semibold mb-3">AI Analysis</h3>
              <p className="text-gray-400">
                Our AI decodes the melody, tempo, and mood behind the notes.
              </p>
            </div>
          </div>
          <div className="group relative overflow-hidden rounded-2xl bg-gray-800/60 backdrop-blur-sm border border-gray-700 shadow-lg hover:shadow-xl hover:shadow-purple-600/20 transition-all">
            <div className="absolute inset-0 bg-gradient-to-tr from-purple-700/10 to-pink-600/10 opacity-0 group-hover:opacity-100 transition-opacity"></div>
            <div className="relative z-10 p-8 text-center">
              <div className="inline-flex items-center justify-center w-20 h-20 rounded-full bg-gradient-to-br from-purple-600 to-pink-600 text-white text-3xl font-bold mb-6 group-hover:scale-110 transition-transform">
                🎨
              </div>
              <h3 className="text-2xl font-semibold mb-3">Visual Storytelling</h3>
              <p className="text-gray-400">
                Get AI-generated scenes that reflect the emotional journey of your music.
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="bg-gradient-to-r from-purple-950 via-black to-indigo-950 py-20 px-6 text-center">
        <div className="max-w-3xl mx-auto">
          <h2 className="text-4xl md:text-5xl font-bold mb-6 bg-clip-text text-transparent bg-gradient-to-r from-pink-400 to-purple-600">
            Ready to See Your Music?
          </h2>
          <p className="text-xl text-gray-300 mb-10 max-w-2xl mx-auto">
            Start transforming melodies into memories today.
          </p>
          <button
            onClick={() => setActiveTab("upload")}
            className="px-10 py-5 bg-gradient-to-r from-pink-500 to-purple-600 text-white font-semibold rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all"
          >
            Upload Your First Track
          </button>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-black border-t border-gray-800 py-10">
        <div className="container mx-auto px-4 text-center text-gray-500">
          <p>&copy; {new Date().getFullYear()} Datarra — Where Sound Becomes Sight.</p>
        </div>
      </footer>
    </div>
  );
}
```
